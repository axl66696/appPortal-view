(self.webpackChunkapp_portal=self.webpackChunkapp_portal||[]).push([[5609,2691],{5609:(C,d,s)=>{s.r(d),s.d(d,{INPUTSWITCH_VALUE_ACCESSOR:()=>r,InputSwitch:()=>c,InputSwitchModule:()=>f});var t=s(5863),o=s(575),h=s(8426);const p=function(a,_,e){return{"p-inputswitch p-component":!0,"p-inputswitch-checked":a,"p-disabled":_,"p-focus":e}},r={provide:h.NG_VALUE_ACCESSOR,useExisting:(0,t.forwardRef)(()=>c),multi:!0};let c=(()=>{class a{cd;style;styleClass;tabindex;inputId;name;disabled;readonly;trueValue=!0;falseValue=!1;ariaLabel;ariaLabelledBy;onChange=new t.EventEmitter;modelValue=!1;focused=!1;onModelChange=()=>{};onModelTouched=()=>{};constructor(e){this.cd=e}onClick(e,i){!this.disabled&&!this.readonly&&(e.preventDefault(),this.toggle(e),i.focus())}onInputChange(e){this.readonly||this.updateModel(e,e.target.checked)}toggle(e){this.updateModel(e,!this.checked())}updateModel(e,i){this.modelValue=i?this.trueValue:this.falseValue,this.onModelChange(this.modelValue),this.onChange.emit({originalEvent:e,checked:this.modelValue})}onFocus(e){this.focused=!0}onBlur(e){this.focused=!1,this.onModelTouched()}writeValue(e){this.modelValue=e,this.cd.markForCheck()}registerOnChange(e){this.onModelChange=e}registerOnTouched(e){this.onModelTouched=e}setDisabledState(e){this.disabled=e,this.cd.markForCheck()}checked(){return this.modelValue===this.trueValue}static \u0275fac=function(i){return new(i||a)(t.\u0275\u0275directiveInject(t.ChangeDetectorRef))};static \u0275cmp=t.\u0275\u0275defineComponent({type:a,selectors:[["p-inputSwitch"]],hostAttrs:[1,"p-element"],inputs:{style:"style",styleClass:"styleClass",tabindex:"tabindex",inputId:"inputId",name:"name",disabled:"disabled",readonly:"readonly",trueValue:"trueValue",falseValue:"falseValue",ariaLabel:"ariaLabel",ariaLabelledBy:"ariaLabelledBy"},outputs:{onChange:"onChange"},features:[t.\u0275\u0275ProvidersFeature([r])],decls:5,vars:16,consts:[[3,"ngClass","ngStyle","click"],[1,"p-hidden-accessible"],["type","checkbox","role","switch",3,"checked","disabled","change","focus","blur"],["cb",""],[1,"p-inputswitch-slider"]],template:function(i,n){if(1&i){const g=t.\u0275\u0275getCurrentView();t.\u0275\u0275elementStart(0,"div",0),t.\u0275\u0275listener("click",function(l){t.\u0275\u0275restoreView(g);const m=t.\u0275\u0275reference(3);return t.\u0275\u0275resetView(n.onClick(l,m))}),t.\u0275\u0275elementStart(1,"div",1)(2,"input",2,3),t.\u0275\u0275listener("change",function(l){return n.onInputChange(l)})("focus",function(l){return n.onFocus(l)})("blur",function(l){return n.onBlur(l)}),t.\u0275\u0275elementEnd()(),t.\u0275\u0275element(4,"span",4),t.\u0275\u0275elementEnd()}2&i&&(t.\u0275\u0275classMap(n.styleClass),t.\u0275\u0275property("ngClass",t.\u0275\u0275pureFunction3(12,p,n.checked(),n.disabled,n.focused))("ngStyle",n.style),t.\u0275\u0275advance(2),t.\u0275\u0275property("checked",n.checked())("disabled",n.disabled),t.\u0275\u0275attribute("aria-label",n.ariaLabel)("id",n.inputId)("name",n.name)("tabindex",n.tabindex)("aria-checked",n.checked())("aria-labelledby",n.ariaLabelledBy))},dependencies:[o.NgClass,o.NgStyle],styles:['@layer primeng{.p-inputswitch{position:relative;display:inline-block;-webkit-user-select:none;user-select:none}.p-inputswitch-slider{position:absolute;cursor:pointer;inset:0}.p-inputswitch-slider:before{position:absolute;content:"";top:50%}}\n'],encapsulation:2,changeDetection:0})}return a})(),f=(()=>{class a{static \u0275fac=function(i){return new(i||a)};static \u0275mod=t.\u0275\u0275defineNgModule({type:a});static \u0275inj=t.\u0275\u0275defineInjector({imports:[o.CommonModule]})}return a})()}}]);