import { Component, EventEmitter, Output, computed, inject, signal } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ButtonModule } from 'primeng/button';
import { NavigationService } from './navigation.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "primeng/button";
export class NavigationComponent {
    constructor() {
        this.setCollapsed = new EventEmitter;
        this.appInfo = signal({});
        this.navigationService = inject(NavigationService);
        this.collapsedButtonIcon = computed(() => {
            if (!this.navigationService.isCollapsed() &&
                this.navigationService.isShowBody()) {
                console.log('pi pi-angle-double-left');
                return 'pi pi-angle-double-left';
            }
            return 'pi pi-angle-double-right';
        });
    }
    /** 開合導覽列
     * @memberof NavigationComponent
     */
    changeCollapsed(isCollapsed) {
        this.navigationService.onCollapsClick();
        this.setCollapsed.emit(!isCollapsed);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.8", ngImport: i0, type: NavigationComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.8", type: NavigationComponent, isStandalone: true, selector: "his-navigation", outputs: { setCollapsed: "setCollapsed" }, providers: [NavigationService], ngImport: i0, template: "\n  <div class=\"navigation-container\">\n    <div class=\"navigation-header\" [ngClass]=\"{'collapsed-inactive': !navigationService.isCollapsed}\">\n      <ng-container *ngIf=\"navigationService.isCollapsed\">\n        <div class=\"m-1\">\n          <span class=\"material-symbols-outlined\">\n            {{appInfo().icon}}\n          </span>\n        </div>\n        <div>\n          <div>{{appInfo().title}}</div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"navigationService.isShowBody()\">\n        <button\n          pButton\n          pRipple\n          type=\"button\"\n          (click)=\"changeCollapsed(navigationService.isCollapsed())\"\n          icon=\"{{ this.collapsedButtonIcon() }}\"\n          class=\"p-button-rounded p-button-text\"\n        > </button>\n      </ng-container>\n    </div>\n    <!-- <ng-container *ngIf=\"navigationService.isShowBody()\">\n      <his-navigation-body class=\"navigation-body\" [bodyItems]=\"navigationBodyItems()\" [iscollapsed]=\"navigationService.isCollapseNavigation()\"></his-navigation-body>\n    </ng-container>\n    <his-navigation-footer></his-navigation-footer> -->\n  </div>\n\n", styles: [":host ::ng-deep .navigation-header .p-button.p-button-icon-only.p-button-rounded.p-button-text{color:var(--primary-main)}:host ::ng-deep .appList .p-dialog-content .p-button.p-button-icon-only .pi,:host ::ng-deep .navigation-footer .p-button.p-button-icon-only .pi{font-size:1.2rem}.layout-sidebar{position:fixed;display:flex;justify-content:center;width:60px;height:100%;z-index:999;overflow-y:auto;-webkit-user-select:none;user-select:none;top:0;left:0;transition:transform .2s,left .2s;background-color:var(--surface-overlay);border-right:1px solid var(--outline-variant);padding:.5rem 0rem;border-radius:0;box-shadow:none}.layout-sidebar.collapsed-inactive{width:200px}.layout-content{margin-left:60px;height:100%}.layout-content.collapsed-inactive{margin-left:200px}.systemTitle{font-size:20px;font-style:normal;font-weight:500;line-height:100%}.navigation-container{height:100%;width:100%;display:flex;flex-direction:column;justify-content:space-between;gap:2px;padding-bottom:10px}.navigation-body{flex:1}.navigation-header{width:100%;display:flex;align-items:center;justify-content:center}.navigation-header.collapsed-inactive{justify-content:space-between}\n"], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "ngmodule", type: ButtonModule }, { kind: "directive", type: i2.ButtonDirective, selector: "[pButton]", inputs: ["iconPos", "loadingIcon", "label", "icon", "loading"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.8", ngImport: i0, type: NavigationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'his-navigation', standalone: true, imports: [CommonModule, ButtonModule], providers: [NavigationService], template: "\n  <div class=\"navigation-container\">\n    <div class=\"navigation-header\" [ngClass]=\"{'collapsed-inactive': !navigationService.isCollapsed}\">\n      <ng-container *ngIf=\"navigationService.isCollapsed\">\n        <div class=\"m-1\">\n          <span class=\"material-symbols-outlined\">\n            {{appInfo().icon}}\n          </span>\n        </div>\n        <div>\n          <div>{{appInfo().title}}</div>\n        </div>\n      </ng-container>\n      <ng-container *ngIf=\"navigationService.isShowBody()\">\n        <button\n          pButton\n          pRipple\n          type=\"button\"\n          (click)=\"changeCollapsed(navigationService.isCollapsed())\"\n          icon=\"{{ this.collapsedButtonIcon() }}\"\n          class=\"p-button-rounded p-button-text\"\n        > </button>\n      </ng-container>\n    </div>\n    <!-- <ng-container *ngIf=\"navigationService.isShowBody()\">\n      <his-navigation-body class=\"navigation-body\" [bodyItems]=\"navigationBodyItems()\" [iscollapsed]=\"navigationService.isCollapseNavigation()\"></his-navigation-body>\n    </ng-container>\n    <his-navigation-footer></his-navigation-footer> -->\n  </div>\n\n", styles: [":host ::ng-deep .navigation-header .p-button.p-button-icon-only.p-button-rounded.p-button-text{color:var(--primary-main)}:host ::ng-deep .appList .p-dialog-content .p-button.p-button-icon-only .pi,:host ::ng-deep .navigation-footer .p-button.p-button-icon-only .pi{font-size:1.2rem}.layout-sidebar{position:fixed;display:flex;justify-content:center;width:60px;height:100%;z-index:999;overflow-y:auto;-webkit-user-select:none;user-select:none;top:0;left:0;transition:transform .2s,left .2s;background-color:var(--surface-overlay);border-right:1px solid var(--outline-variant);padding:.5rem 0rem;border-radius:0;box-shadow:none}.layout-sidebar.collapsed-inactive{width:200px}.layout-content{margin-left:60px;height:100%}.layout-content.collapsed-inactive{margin-left:200px}.systemTitle{font-size:20px;font-style:normal;font-weight:500;line-height:100%}.navigation-container{height:100%;width:100%;display:flex;flex-direction:column;justify-content:space-between;gap:2px;padding-bottom:10px}.navigation-body{flex:1}.navigation-header{width:100%;display:flex;align-items:center;justify-content:center}.navigation-header.collapsed-inactive{justify-content:space-between}\n"] }]
        }], propDecorators: { setCollapsed: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9uYXZpZ2F0aW9uL3NyYy9saWIvbmF2aWdhdGlvbi5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9uYXZpZ2F0aW9uL3NyYy9saWIvbmF2aWdhdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBUyxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakcsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUU5QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7OztBQVN6RCxNQUFNLE9BQU8sbUJBQW1CO0lBUmhDO1FBVVksaUJBQVksR0FBRyxJQUFJLFlBQWlCLENBQUM7UUFFL0MsWUFBTyxHQUFHLE1BQU0sQ0FBVyxFQUFjLENBQUMsQ0FBQTtRQUMxQyxzQkFBaUIsR0FBRyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUM5Qyx3QkFBbUIsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFO1lBQ2xDLElBQ0UsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsV0FBVyxFQUFFO2dCQUNyQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsVUFBVSxFQUFFLEVBQ25DO2dCQUNBLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUMsQ0FBQTtnQkFDdEMsT0FBTyx5QkFBeUIsQ0FBQzthQUNsQztZQUNELE9BQU8sMEJBQTBCLENBQUM7UUFDcEMsQ0FBQyxDQUFDLENBQUM7S0FTSjtJQVBDOztPQUVHO0lBQ0gsZUFBZSxDQUFDLFdBQW1CO1FBQ2pDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxjQUFjLEVBQUUsQ0FBQTtRQUN2QyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7OEdBdkJVLG1CQUFtQjtrR0FBbkIsbUJBQW1CLHdHQUZuQixDQUFDLGlCQUFpQixDQUFDLDBCQ1hoQyxncENBOEJBLHdzQ0R0QlksWUFBWSxnT0FBQyxZQUFZOzsyRkFLeEIsbUJBQW1CO2tCQVIvQixTQUFTOytCQUNFLGdCQUFnQixjQUNkLElBQUksV0FDUCxDQUFDLFlBQVksRUFBQyxZQUFZLENBQUMsYUFHekIsQ0FBQyxpQkFBaUIsQ0FBQzs4QkFJcEIsWUFBWTtzQkFBckIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBjb21wdXRlZCwgaW5qZWN0LCBzaWduYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBCdXR0b25Nb2R1bGUgfSBmcm9tICdwcmltZW5nL2J1dHRvbic7XG5pbXBvcnQge0FwcFN0b3JlfSBmcm9tICdAaGlzLXZpZXdtb2RlbC9hcHAtcG9ydGFsL2Rpc3QnXG5pbXBvcnQgeyBOYXZpZ2F0aW9uU2VydmljZSB9IGZyb20gJy4vbmF2aWdhdGlvbi5zZXJ2aWNlJztcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2hpcy1uYXZpZ2F0aW9uJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSxCdXR0b25Nb2R1bGVdLFxuICB0ZW1wbGF0ZVVybDogJy4vbmF2aWdhdGlvbi5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25hdmlnYXRpb24uY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbTmF2aWdhdGlvblNlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIE5hdmlnYXRpb25Db21wb25lbnQge1xuXG4gIEBPdXRwdXQoKSBzZXRDb2xsYXBzZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT47XG5cbiAgYXBwSW5mbyA9IHNpZ25hbDxBcHBTdG9yZT4oe30gYXMgQXBwU3RvcmUpXG4gIG5hdmlnYXRpb25TZXJ2aWNlID0gaW5qZWN0KE5hdmlnYXRpb25TZXJ2aWNlKTtcbiAgY29sbGFwc2VkQnV0dG9uSWNvbiA9IGNvbXB1dGVkKCgpID0+IHtcbiAgICBpZiAoXG4gICAgICAhdGhpcy5uYXZpZ2F0aW9uU2VydmljZS5pc0NvbGxhcHNlZCgpICYmXG4gICAgICB0aGlzLm5hdmlnYXRpb25TZXJ2aWNlLmlzU2hvd0JvZHkoKVxuICAgICkge1xuICAgICAgY29uc29sZS5sb2coJ3BpIHBpLWFuZ2xlLWRvdWJsZS1sZWZ0JylcbiAgICAgIHJldHVybiAncGkgcGktYW5nbGUtZG91YmxlLWxlZnQnO1xuICAgIH1cbiAgICByZXR1cm4gJ3BpIHBpLWFuZ2xlLWRvdWJsZS1yaWdodCc7XG4gIH0pO1xuXG4gIC8qKiDplovlkIjlsI7opr3liJdcbiAgICogQG1lbWJlcm9mIE5hdmlnYXRpb25Db21wb25lbnRcbiAgICovXG4gIGNoYW5nZUNvbGxhcHNlZChpc0NvbGxhcHNlZDpib29sZWFuKTogdm9pZCB7XG4gICAgdGhpcy5uYXZpZ2F0aW9uU2VydmljZS5vbkNvbGxhcHNDbGljaygpXG4gICAgdGhpcy5zZXRDb2xsYXBzZWQuZW1pdCghaXNDb2xsYXBzZWQpO1xuICB9XG59XG4iLCJcbiAgPGRpdiBjbGFzcz1cIm5hdmlnYXRpb24tY29udGFpbmVyXCI+XG4gICAgPGRpdiBjbGFzcz1cIm5hdmlnYXRpb24taGVhZGVyXCIgW25nQ2xhc3NdPVwieydjb2xsYXBzZWQtaW5hY3RpdmUnOiAhbmF2aWdhdGlvblNlcnZpY2UuaXNDb2xsYXBzZWR9XCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwibmF2aWdhdGlvblNlcnZpY2UuaXNDb2xsYXBzZWRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm0tMVwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPVwibWF0ZXJpYWwtc3ltYm9scy1vdXRsaW5lZFwiPlxuICAgICAgICAgICAge3thcHBJbmZvKCkuaWNvbn19XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8ZGl2Pnt7YXBwSW5mbygpLnRpdGxlfX08L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJuYXZpZ2F0aW9uU2VydmljZS5pc1Nob3dCb2R5KClcIj5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIHBCdXR0b25cbiAgICAgICAgICBwUmlwcGxlXG4gICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgKGNsaWNrKT1cImNoYW5nZUNvbGxhcHNlZChuYXZpZ2F0aW9uU2VydmljZS5pc0NvbGxhcHNlZCgpKVwiXG4gICAgICAgICAgaWNvbj1cInt7IHRoaXMuY29sbGFwc2VkQnV0dG9uSWNvbigpIH19XCJcbiAgICAgICAgICBjbGFzcz1cInAtYnV0dG9uLXJvdW5kZWQgcC1idXR0b24tdGV4dFwiXG4gICAgICAgID4gPC9idXR0b24+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8L2Rpdj5cbiAgICA8IS0tIDxuZy1jb250YWluZXIgKm5nSWY9XCJuYXZpZ2F0aW9uU2VydmljZS5pc1Nob3dCb2R5KClcIj5cbiAgICAgIDxoaXMtbmF2aWdhdGlvbi1ib2R5IGNsYXNzPVwibmF2aWdhdGlvbi1ib2R5XCIgW2JvZHlJdGVtc109XCJuYXZpZ2F0aW9uQm9keUl0ZW1zKClcIiBbaXNjb2xsYXBzZWRdPVwibmF2aWdhdGlvblNlcnZpY2UuaXNDb2xsYXBzZU5hdmlnYXRpb24oKVwiPjwvaGlzLW5hdmlnYXRpb24tYm9keT5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8aGlzLW5hdmlnYXRpb24tZm9vdGVyPjwvaGlzLW5hdmlnYXRpb24tZm9vdGVyPiAtLT5cbiAgPC9kaXY+XG5cbiJdfQ==