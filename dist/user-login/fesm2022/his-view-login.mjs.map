{"version":3,"file":"his-view-login.mjs","sources":["../../../user-login/src/lib/login.service.ts","../../../user-login/src/environments/environment.ts","../../../user-login/src/lib/ws-nats.service.ts","../../../user-login/src/lib/forgot-password/forgot-password.service.ts","../../../user-login/src/lib/forgot-password/forgot-password.component.ts","../../../user-login/src/lib/forgot-password/forgot-password.component.html","../../../user-login/src/lib/reset-password/reset-password.service.ts","../../../user-login/src/lib/reset-password/reset-password.component.ts","../../../user-login/src/lib/reset-password/reset-password.component.html","../../../user-login/src/lib/login.component.ts","../../../user-login/src/lib/login.component.html","../../../user-login/src/public-api.ts","../../../user-login/src/his-view-login.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Injectable,inject} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { JetstreamWsService} from '@his-base/jetstream-ws/dist';\nimport { LoginReq, UserAccount, UserToken } from '@his-viewmodel/app-portal/dist';\nimport jsSHA from 'jssha';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  #jetStreamWsService = inject(JetstreamWsService);\n\n  /** 取得使用者權杖\n   * @param {LoginReq} payload\n   * @return {*}  {Observable<UserToken>}\n   * @memberof LoginService\n   */\n  getUserToken(payload: LoginReq): Observable<UserToken>{\n    // @ts-ignore\n    // 需帶入指定的主題跟要傳遞的資料\n    return this.#jetStreamWsService.request('appPortal.userAccount.userToken', payload)\n  }\n\n  /** 加密密碼\n   * @param {string} password\n   * @return {*}  {string}\n   * @memberof LoginService\n   */\n  getHashPassword(password: string): string {\n    const shaObj = new jsSHA('SHA3-256', 'TEXT', { encoding: 'UTF8' });\n    shaObj.update(password);\n    return shaObj.getHash('HEX');\n  }\n\n  /** 取得使用者帳號資訊\n   * @param {string} payload\n   * @return {*}  {Observable<UserAccount>}\n   * @memberof LoginService\n   */\n  getUserAccount(payload: string): Observable<UserAccount>{\n    return this.#jetStreamWsService.request('appPortal.userAccount.find', payload)\n  }\n}\n","export const environment = {\n  wsUrl: 'ws://localhost:8080'\n}\n","import { Injectable, inject } from '@angular/core';\nimport { JetstreamWsService } from '@his-base/jetstream-ws/dist';\nimport { environment } from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WsNatsService {\n\n  /** 與Nats連接的Url\n   * @type {string}\n   * @memberof WsNatsService\n   */\n  #natsUrl = environment.wsUrl;\n\n  #jetStreamWsService = inject(JetstreamWsService);\n\n  /** 與Nats連接\n   * @memberof WsNatsService\n   */\n  async connect() {\n    await this.#jetStreamWsService.connect(this.#natsUrl);\n  }\n\n  /** 與Nats斷開連接\n   * @memberof WsNatsService\n   */\n  async disconnect() {\n    // 連線關閉前，會先將目前訂閱給排空\n    await this.#jetStreamWsService.drain();\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Observable } from 'rxjs';\nimport { Injectable, inject } from '@angular/core';\nimport { JetstreamWsService } from '@his-base/jetstream-ws/dist';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForgotPasswordService {\n\n  #jetStreamWsService = inject(JetstreamWsService)\n\n  /** 向後端拿userMail\n   * @param {string} userCode\n   * @param {string} eMail\n   * @return {*}  {Observable<string>}\n   * @memberof ForgotPasswordService\n   */\n  getUserMail(userCode: string, eMail: string): Observable<string> {\n    // @ts-ignore\n    // 需帶入指定發布主題以及要傳送的訊息\n    return this.#jetStreamWsService.request('appPortal.userAccount.userMail', {'userCode': userCode,'eMail': eMail});\n  }\n\n  /** 向後端publish發送email的訊息\n   * @param {string} userCode\n   * @param {string} eMail\n   * @memberof ForgotPasswordService\n   */\n  async pubSendMail(userCode: string, eMail: string) {\n    await this.#jetStreamWsService.publish('appPortal.userAccount.sendMail',{'userCode': userCode, 'eMail': eMail})\n  }\n}\n","import { Component, EventEmitter, Input, Output, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogModule } from 'primeng/dialog';\nimport { FormsModule } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ForgotPasswordService } from './forgot-password.service';\nimport '@angular/localize/init';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'his-forgot-password',\n  standalone: true,\n  imports: [\n            CommonModule,\n            DialogModule,\n            FormsModule,\n            ButtonModule,\n            InputTextModule,\n            TranslateModule\n  ],\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent {\n\n  /** 忘記密碼畫面顯示與否\n   * @type {boolean}\n   * @memberof ForgotPasswordComponent\n   */\n  @Input() isVisibleForgot!: boolean;\n\n  /** 發射關閉忘記密碼畫面事件\n   * @memberof ForgotPasswordComponent\n   */\n  @Output() hideForgot = new EventEmitter();\n\n  /** 帳號\n   * @type {string}\n   * @memberof ForgotPasswordComponent\n   */\n  userCode: string = '';\n\n  /** 電子信箱\n   * @type {string}\n   * @memberof ForgotPasswordComponent\n   */\n  eMail: string = '';\n\n  /** 後端回傳的使用者信箱\n   * @type {string}\n   * @memberof ForgotPasswordComponent\n   */\n  userMail: string = '';\n\n  messageService = inject(MessageService);\n  #forgotPasswordService = inject(ForgotPasswordService);\n  #translateService = inject(TranslateService);\n\n  /** 點擊確定送出按鈕\n   * @memberof ForgotPasswordComponent\n   */\n  onSubmitClick() {\n    this.#forgotPasswordService.getUserMail(this.userCode, this.eMail).subscribe(x => {\n      this.userMail = x\n      if(this.userMail !== this.eMail) {\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: this.#translateService.instant('帳號或信箱不正確')});\n      }\n      else {\n        this.#forgotPasswordService.pubSendMail(this.userCode,this.userMail)\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: this.#translateService.instant('重置連結已發送到信箱')});\n        this.hideForgot.emit();\n      }\n      this.userCode = '';\n      this.eMail = '';\n    })\n    }\n\n  /** 關閉忘記密碼視窗\n   * @memberof ForgotPasswordComponent\n   */\n  onCloseClick() {\n    this.userCode = '';\n    this.eMail = '';\n    this.hideForgot.emit();\n  }\n}\n","<p-dialog\n  class=\"profile\"\n  [(visible)]=\"isVisibleForgot\"\n  [modal]=\"true\"\n  showEffect=\"fade\"\n  [breakpoints]=\"{ '960px': '75vw' }\"\n>\n<ng-template pTemplate=\"header\">\n  <div class=\"dialog-header\">\n    <span>{{'忘記密碼'|translate}}</span>\n    <button pButton pRipple type=\"button\" (click)=\"onCloseClick()\" icon=\"pi pi-times\" class=\"p-button-rounded\"> </button>\n  </div>\n</ng-template>\n  <div class=\"profileContent lg:col-12 mb-2 p-0 flex justify-content-center\">\n    <div class=\"fromList flex flex-wrap justify-content-center w-full\">\n      <div class=\"fromColumn flex\">\n        <h6>{{'帳號'|translate}}</h6>\n        <input type=\"text\" pInputText [(ngModel)]=\"userCode\" />\n      </div>\n      <div class=\"fromColumn flex\">\n        <h6>{{'電子信箱'|translate}}</h6>\n        <input type=\"text\" pInputText [(ngModel)]=\"eMail\"/>\n      </div>\n      <div>※ {{'輸入驗證資料將會收到修改密碼確認信'|translate}}</div>\n    </div>\n  </div>\n  <ng-template pTemplate=\"footer\">\n    <button\n      pButton\n      pRipple\n      (click)=\"onCloseClick()\"\n      type=\"button\"\n      [label]=\"'取消'|translate\"\n      class=\"p-button-secondary\"\n    > </button>\n    <button\n      pButton\n      pRipple\n      (click)=\"onSubmitClick()\"\n      type=\"button\"\n      [label]=\"'確定送出'|translate\"\n    > </button>\n  </ng-template>\n</p-dialog>\n","import {  Observable } from 'rxjs';\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Injectable, inject } from '@angular/core';\nimport { JetstreamWsService } from '@his-base/jetstream-ws/dist';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n  /** 與Nats連接的Url\n   * @type {string}\n   * @memberof ResetPasswordService\n   */\n  #natsUrl = environment.wsUrl;\n\n  #jetStreamWsService = inject(JetstreamWsService)\n\n  /** 以傳入的token至後端抓取使用者代號\n   * @param {string} payload\n   * @return {*}  {Observable<string>}\n   * @memberof ResetPasswordService\n   */\n  getUserCode(payload: string): Observable<string> {\n    // @ts-ignore\n    // 需帶入指定發布主題以及要傳送的訊息\n    return this.#jetStreamWsService.request('appPortal.userAccount.userCode', payload);\n  }\n\n  /** 將新密碼送至後端更新\n   * @param {string} userCode\n   * @param {string} passwordHash\n   * @memberof ResetPasswordService\n   */\n  async pubPassword(userCode: string, passwordHash: string) {\n    // @ts-ignore\n    // 需帶入指定發布主題以及要傳送的訊息\n    await this.#jetStreamWsService.publish('appPortal.userAccount.modifyPassword', {'userCode': userCode, 'passwordHash': passwordHash});\n  }\n\n  /** nats server連線\n   * @memberof ResetPasswordService\n   */\n  async connect() {\n    await this.#jetStreamWsService.connect(this.#natsUrl);\n  }\n\n  /** nats server中斷連線\n   * @memberof ResetPasswordService\n   */\n  async disconnect() {\n    await this.#jetStreamWsService.drain()\n  }\n}\n","/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogModule } from 'primeng/dialog';\nimport { FormsModule } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { LoginService } from '../login.service';\nimport { PasswordModule } from 'primeng/password';\nimport { ResetPasswordService } from './reset-password.service';\nimport { Router } from '@angular/router';\nimport '@angular/localize/init';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'his-reset-password',\n  standalone: true,\n  imports: [\n            CommonModule,\n            DialogModule,\n            FormsModule,\n            ButtonModule,\n            InputTextModule,\n            PasswordModule,\n            TranslateModule\n  ],\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy{\n\n  /** 重設密碼畫面是否可視\n   * @type {boolean}\n   * @memberof ResetPasswordComponent\n   */\n  @Input() isVisibleReset!: boolean;\n\n  /** 識別token\n   * @type {string}\n   * @memberof ResetPasswordComponent\n   */\n  @Input() token!: string;\n\n  /** 發射關閉重置密碼視窗事件\n   * @memberof ResetPasswordComponent\n   */\n  @Output() hideReset = new EventEmitter();\n\n  /** 新密碼\n   * @type {string}\n   * @memberof ResetPasswordComponent\n   */\n  password: string = '';\n\n  /** 再確認新密碼\n   * @type {string}\n   * @memberof ResetPasswordComponent\n   */\n  passwordConfirm: string = '';\n\n  /** 從後端拿到的使用者代碼\n   * @type {string}\n   * @memberof ResetPasswordComponent\n   */\n  userCode: string = '';\n\n  /** 加密後的新密碼\n   * @type {string}\n   * @memberof ResetPasswordComponent\n   */\n  passwordHash: string = ''\n\n  router = inject(Router);\n  messageService = inject(MessageService);\n  loginService = inject(LoginService);\n  #resetPasswordService = inject(ResetPasswordService);\n  #translateService = inject(TranslateService)\n\n  /** 初始化,與Nats連線，如果網址傳入之token無誤則可以進入重置密碼頁面\n   * @memberof ResetPasswordComponent\n   */\n  async ngOnInit() {\n    if(this.token){\n      await this.#resetPasswordService.connect();\n      this.checkUserCode();\n    }\n  }\n\n  /** 斷開Nats的連線\n   * @memberof ResetPasswordComponent\n   */\n  async ngOnDestroy() {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    await this.#resetPasswordService.disconnect();\n  }\n\n  /** 點擊關閉重置密碼dialog\n   * @memberof ResetPasswordComponent\n   */\n  onCloseClick() {\n    this.hideReset.emit();\n    this.router.navigate(['login']);\n  }\n\n  /** 驗證密碼與再輸入密碼兩個欄位的值是否相同\n   * @return {*}  {boolean}\n   * @memberof ResetPasswordComponent\n   */\n  checkPassword(): boolean {\n    const passwordHash = this.loginService.getHashPassword(this.password);\n    const passwordConfirmHash = this.loginService.getHashPassword(this.passwordConfirm);\n    if(passwordHash === passwordConfirmHash && this.password !== '') {\n      this.passwordHash = passwordHash;\n      return true;\n    }\n    else\n      return false;\n  }\n\n  /** 點擊取消按鈕\n   * @memberof ResetPasswordComponent\n   */\n  onCancelClick() {\n    this.password = '';\n    this.passwordConfirm = '';\n    this.hideReset.emit();\n    this.router.navigate(['login']);\n  }\n\n  /** 點擊確定按鈕送出新密碼\n   * @memberof ResetPasswordComponent\n   */\n  onSubmitClick() {\n    if(this.checkPassword()) {\n      history.replaceState('','','login')\n      this.isVisibleReset = false\n      this.messageService.add({ severity: 'success', summary: 'Success', detail: this.#translateService.instant('重置成功')});\n      this.#resetPasswordService.pubPassword(this.userCode, this.passwordHash);\n    }\n    else {\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: this.#translateService.instant('請輸入相同密碼')});\n    }\n    this.password = '';\n    this.passwordConfirm = '';\n  }\n\n  /** 檢查有無Usercode 如果得到的userCode是空值則不能進入重置密碼頁面\n   * @memberof ResetPasswordComponent\n   */\n  checkUserCode() {\n    this.#resetPasswordService.getUserCode(this.token).subscribe(x => {\n      this.userCode = x\n      if(this.userCode === '') {\n        history.replaceState('','','login')\n        this.messageService.add({ severity: 'error', summary: 'Error', detail: this.#translateService.instant('重置連結驗證失敗')});\n      }\n      else {\n        this.isVisibleReset = true\n      }\n    })\n  }\n}\n","<p-dialog\n  class=\"profile\"\n  [(visible)]=\"isVisibleReset\"\n  [modal]=\"true\"\n  showEffect=\"fade\"\n  [breakpoints]=\"{ '960px': '75vw' }\"\n>\n<ng-template pTemplate=\"header\">\n  <div class=\"dialog-header\">\n    <span>{{'重置密碼'|translate}}</span>\n    <button pButton pRipple type=\"button\" (click)=\"onCloseClick()\" icon=\"pi pi-times\" class=\"p-button-rounded\"> </button>\n  </div>\n</ng-template>\n  <div class=\"profileContent lg:col-12 mb-2 p-0 flex justify-content-center\">\n    <div class=\"fromList flex flex-wrap justify-content-center w-full\">\n        <div class=\"fromColumn flex\">\n          <h6>{{'新密碼'|translate}}</h6>\n            <p-password [(ngModel)]=\"password\" [placeholder]=\"'請輸入新密碼'|translate\" [feedback]=\"true\" [toggleMask]=\"true\"></p-password>\n        </div>\n        <div class=\"fromColumn flex\">\n          <h6>{{'請再次輸入'| translate}}</h6>\n            <p-password [(ngModel)]=\"passwordConfirm\" [placeholder]=\"'請再次輸入'|translate\" [feedback]=\"false\" [toggleMask]=\"true\"></p-password>\n        </div>\n      <div>※ {{'請注意輸入相同密碼'|translate}}</div>\n    </div>\n  </div>\n  <ng-template pTemplate=\"footer\">\n    <button\n      pButton\n      pRipple\n      (click)=\"onCancelClick()\"\n      type=\"button\"\n      [label]=\"'取消'|translate\"\n      class=\"p-button-secondary\"\n    > </button>\n    <button\n      pButton\n      pRipple\n      (click)=\"onSubmitClick()\"\n      type=\"button\"\n      [label]=\"'確定送出'|translate\"\n    > </button>\n  </ng-template>\n</p-dialog>\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Component, Input, OnInit, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageModule } from 'primeng/image';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { SharedService } from '@his-base/shared';\nimport { LoginService } from './login.service';\nimport { WsNatsService } from './ws-nats.service';\nimport { UserAccount, UserProfile, UserToken } from '@his-viewmodel/app-portal/dist';\nimport { LoginReq } from '@his-viewmodel/app-portal/dist'\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as branchData from '../assets/data/branchesName.json'\nimport '@angular/localize/init';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { UserAccountService, UserProfileService } from 'service';\n@Component({\n  selector: 'his-login',\n  standalone: true,\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  providers: [MessageService],\n  imports: [CommonModule,\n    ButtonModule,\n    PasswordModule,\n    FormsModule,\n    RouterLink,\n    ImageModule,\n    DropdownModule,\n    ToastModule,\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    InputTextModule,\n    TranslateModule\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  /** 加密識別token\n   * @type {string}\n   * @memberof LoginComponent\n   */\n  @Input() token!: string;\n\n  /** 院區選項\n   * @type {string[]}\n   * @memberof LoginComponent\n   */\n  branchesOption: string[] = [];\n\n  /** 輸入的密碼\n   * @type {string}\n   * @memberof LoginComponent\n   */\n  password: string = '';\n\n  /** 登入資訊\n   * @type {LoginReq}\n   * @memberof LoginComponent\n   */\n  loginReq: LoginReq = new LoginReq();\n\n  /** 使用者權杖\n   * @type {UserToken}\n   * @memberof LoginComponent\n   */\n  userToken: UserToken = new UserToken();\n\n  /** 忘記密碼頁面顯示與否\n   * @type {boolean}\n   * @memberof LoginComponent\n   */\n  isVisibleForgot: boolean = false;\n\n  /** 重置密碼頁面顯示與否\n   * @type {boolean}\n   * @memberof LoginComponent\n   */\n  isVisibleReset: boolean = false;\n\n  /** 使用者帳號資訊\n   * @type {UserAccount}\n   * @memberof LoginComponent\n   */\n  userAccount: UserAccount = new UserAccount();\n\n  messageService = inject(MessageService);\n  router = inject(Router);\n  userAccountService = inject(UserAccountService);\n  userProfileService = inject(UserProfileService);\n  #loginService = inject(LoginService);\n  #wsNatsService = inject(WsNatsService);\n  #sharedService = inject(SharedService);\n  #translateService = inject(TranslateService)\n\n  /** 初始化登入畫面為淺色模式 以及與Nats連線\n   * @memberof LoginComponent\n   */\n  async ngOnInit() {\n    this.branchesOption = Object.values(branchData)[0] as unknown as string[]\n    await this.#wsNatsService.connect();\n    const themeLink = <HTMLLinkElement>document.getElementById('theme-css')\n    themeLink.href = 'app/styles/theme-light.css'\n  }\n\n  /** 點擊登入按鈕\n   * @memberof LoginComponent\n   */\n  onLoginClick() {\n    try {\n      this.loginReq.passwordHash = this.#loginService.getHashPassword(this.password);\n      this.#loginService.getUserToken(this.loginReq).subscribe(x => {\n        this.userToken = x\n        this.checkUserToken(this.userToken);\n        this.getUserProfile(this.userToken);\n      })\n    }\n    catch (error) {\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: this.#translateService.instant('登入失敗') });\n    }\n  }\n\n  /** 檢查有無登入授權\n   * @param {UserToken} userToken\n   * @memberof LoginComponent\n   */\n  checkUserToken(userToken: UserToken) {\n    if (userToken.token !== '') {\n      this.#sharedService.sharedValue = null;\n      this.#loginService.getUserAccount(userToken.userCode.code).subscribe(x => {\n        this.userAccount = x\n        this.userAccountService.userAccount.set(x);\n        console.log(\"this.userAccountService.userAccount<========\",this.userAccountService.userAccount())\n        // const key = this.#sharedService.setValue(this.userAccount)\n        // this.router.navigate(['/home'], { state: { token: key } });\n        this.router.navigate(['/home']);\n      })\n    }\n    else {\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: this.#translateService.instant('帳號或密碼錯誤') });\n    }\n  }\n\n    /** 檢查授權拿到User Profile\n   * @param {UserToken} userToken\n   * @memberof LoginComponent\n   */\n    getUserProfile(userToken: UserToken) {\n      if (userToken.token !== '') {\n        this.userProfileService.getUserProfile(userToken.userCode.code, \"app-portal\")\n            .subscribe((x: UserProfile) => {\n              this.userProfileService.userProfile.set(x);\n            })\n      }\n    }\n\n  /** 點擊忘記密碼\n   * @memberof LoginComponent\n   */\n  onForgotClick() {\n    this.isVisibleForgot = true;\n  }\n\n  /** 關閉忘記密碼視窗\n   * @memberof LoginComponent\n   */\n  onHideForgot() {\n    this.isVisibleForgot = false;\n  }\n\n  /** 關閉重置密碼視窗\n   * @memberof LoginComponent\n   */\n  onHideReset() {\n    this.isVisibleReset = false;\n  }\n}\n","<div class=\"login-page-container\">\n  <div class=\"login-container\">\n    <div class=\"welcome-container\">\n    <div class=\"welcome-style\">Welcome!</div>\n  </div>\n    <div class=\"logo-container\">\n      <img src=\"assets/companyLogo.png\" alt=\"Image\" />\n    </div>\n\n    <div class=\"title-style\">雲行至善醫療系統</div>\n\n\n    <div class=\"form-container\">\n      <div class=\"input-text\">\n        <label class=\"input-label\" htmlFor=\"branchSelector\">{{'院區'|translate}}</label>\n        <p-dropdown\n          id=\"branchSelector\"\n          [options]=\"branchesOption\"\n          [(ngModel)]=\"loginReq.orgNo\"\n          [placeholder]=\"'請選擇院區' | translate\"\n        >\n      </p-dropdown>\n      </div>\n      <div class=\"input-text\">\n        <label class=\"input-label\" htmlFor=\"UserName\">{{'帳號'|translate}}</label>\n        <input\n          pInputText\n          id=\"UserName\"\n          type=\"text\"\n          [placeholder]=\"'請輸入帳號' | translate\"\n          [(ngModel)]=\"loginReq.userCode.code\"\n          class=\"p-inputtext p-element p-component\"\n        />\n      </div>\n      <div class=\"input-text\">\n        <label class=\"input-label\" htmlFor=\"Password\">{{'密碼'|translate}}</label>\n        <p-password\n          id=\"password\"\n          [placeholder]=\"'請輸入密碼' | translate\"\n          [(ngModel)]=\"password\"\n          [feedback]=\"false\"\n          (keyup.enter)=\"onLoginClick()\"\n          class=\"p-fluid\"\n        ></p-password>\n      </div>\n      <div class=\"button-group\">\n        <p-button [label]=\"'忘記密碼' | translate\" styleClass=\"p-button-link\" (onClick)=\"onForgotClick()\"></p-button>\n        <button pButton pRipple-label [label]=\"'登入' | translate\" (click)=\"onLoginClick()\"> </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"image-container\">\n    <div class=\"image-box\">\n      <img src=\"assets/loginImage.png\" class=\"image-style\" alt=\"Image\" />\n    </div>\n  </div>\n</div>\n<p-toast></p-toast>\n\n<his-forgot-password (hideForgot)=\"onHideForgot()\" [isVisibleForgot]=isVisibleForgot></his-forgot-password>\n<his-reset-password (hideReset)=\"onHideReset()\" [isVisibleReset]=isVisibleReset [token]=\"token\"></his-reset-password>\n\n","/*\n * Public API Surface of login\n */\n\nexport * from './lib/login.service';\nexport * from './lib/login.component';\nexport * from './lib/forgot-password/forgot-password.component';\nexport * from './lib/forgot-password/forgot-password.service';\nexport * from './lib/reset-password/reset-password.component';\nexport * from './lib/reset-password/reset-password.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i4","i5","i6","i7"],"mappings":"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"}